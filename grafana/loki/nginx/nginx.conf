

events {
    worker_connections 1024;
}


http {
    include       mime.types;
    default_type  application/json;

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    server_tokens off;

    #gzip  on;

    # This is required to proxy Grafana Live WebSocket connections.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream grafana {
        server localhost:4000;
    }

    upstream prometheus {
        server localhost:9200;
    }

    upstream read {
       # read 모듈이 추가되면 여기에도 추가
       server 127.0.0.1:3110;
    }

    upstream write {
       # write 모듈이 추가되면 여기에도 추가
       server 127.0.0.1:3120;
    }

    server {
        listen       3000;
        server_name  10.1.39.192:3000;

        #access_log  logs/host.access.log  main;

        location / {
            return 200 'OK';
            auth_basic off;
        }

        location = /loki/api/v1/push {
            proxy_pass http://write$request_uri;
        }

		location = /loki/api/v1/tail {
            proxy_pass http://read$request_uri;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Calling an API for backend(loki component) target can be problematic
		# But ignores just for now
        location /loki/api/.* {
            proxy_pass http://read$request_uri;
        }

        location /grafana/ {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            rewrite  ^/grafana/(.*)  /$1 break;
        }

        # Proxy Grafana Live WebSocket connections.
        location /grafana/api/live/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
            rewrite  ^/grafana/(.*) /$1 break;
            proxy_pass http://grafana;
            error_log logs/proxy.log debug;
        }

        location ~ ^/grafana/api/datasources/proxy/uid/[^/]+/loki/api/v1/tail {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_pass http://grafana;
        }

        location /prometheus/ {
            proxy_pass http://prometheus;
            proxy_set_header Host $host;
        }

        error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}
